# Generated by Django 2.2.5 on 2019-12-22 09:07

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, 'Super Admin'), (2, 'Company Admin'), (3, 'Company Reviewer'), (10, 'Student')])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('color', models.CharField(default='#007bff', max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name='Interview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interview_organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interview_organisation', to='interview.Company')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_status', models.PositiveSmallIntegerField(choices=[(0, 'Not reviewed'), (1, 'Shortlisted'), (2, 'Rejected')], default=0)),
                ('rating', models.PositiveSmallIntegerField(choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=0)),
                ('comment', models.CharField(max_length=255)),
                ('review_create_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Interviewee',
            fields=[
                ('user_for_interview', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='user_for_interview', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('phone', models.CharField(blank=True, max_length=30)),
                ('name', models.CharField(blank=True, default='', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Interviewer',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='working_organization', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='working_organization', to='interview.Company')),
            ],
        ),
        migrations.CreateModel(
            name='Vacancy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(max_length=255, verbose_name='Position')),
                ('description', models.TextField(blank=True, default='')),
                ('count', models.PositiveIntegerField(default=1, verbose_name='Vacancy Count')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Pause', 'Pause')], max_length=10)),
                ('start_date', models.DateField(default='22/12/2019')),
                ('end_date', models.DateField(default='22/12/2019')),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner_organisation', to='interview.Company')),
                ('vacancy_owner', models.ForeignKey(on_delete=models.SET(1), related_name='vacancy_owner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255, verbose_name='Question')),
                ('time', models.PositiveIntegerField(default=30, verbose_name='Time')),
                ('owner_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner_company', to='interview.Company')),
                ('question_owner', models.ForeignKey(on_delete=models.SET(1), related_name='question_owner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InterviewQuestions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.PositiveIntegerField(default=1, verbose_name='Question Index')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_link', to='interview.Question')),
                ('taken_interviews', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_interview', to='interview.Interview')),
            ],
        ),
        migrations.AddField(
            model_name='interview',
            name='position_name',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='position_name', to='interview.Vacancy'),
        ),
        migrations.AddField(
            model_name='interview',
            name='questions',
            field=models.ManyToManyField(through='interview.InterviewQuestions', to='interview.Question'),
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_id', models.CharField(default='', max_length=255)),
                ('video_name', models.CharField(default='', max_length=1024)),
                ('location', models.CharField(default='', max_length=1024)),
                ('text', models.CharField(default='', max_length=255, verbose_name='Answer')),
                ('index', models.PositiveIntegerField(default=1, verbose_name='Question Index')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_question', to='interview.Question')),
            ],
        ),
        migrations.CreateModel(
            name='TakenInterview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'Pending'), (2, 'Active'), (3, 'Complete'), (4, 'Canceled'), (5, 'Expired'), (101, 'Practice Pending'), (102, 'Practice Active'), (103, 'Practice Complete')])),
                ('interview_create_date', models.DateTimeField(auto_now_add=True)),
                ('interview_attempt_date', models.DateTimeField(blank=True, null=True)),
                ('answers', models.ManyToManyField(related_name='answer', to='interview.Answer')),
                ('review', models.ManyToManyField(related_name='review', to='interview.Review')),
                ('taken_interviews', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taken_interviews', to='interview.Interview')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidate', to='interview.Interviewee')),
                ('shared_to_users', models.ManyToManyField(related_name='shared_to_users', to='interview.Interviewer')),
            ],
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('setting_updated_date', models.DateTimeField(auto_now_add=True)),
                ('welcome_message', models.TextField(blank=True, default='Welcome to Video Interview')),
                ('interview_instructions', models.TextField(blank=True, default='Please complete questions within the time Limit.')),
                ('thank_you_message', models.TextField(blank=True, default='Thank you for completing to video interview process. We will be in touch shortly.')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'Add Pipe')], default=1)),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='setting_organisation', to='interview.Company')),
                ('practice_interview', models.ForeignKey(null=True, on_delete=models.SET(1), related_name='setting_practice_question', to='interview.Interview')),
                ('setting_updated_by', models.ForeignKey(on_delete=models.SET(1), related_name='setting_updated_by', to='interview.Interviewer')),
            ],
        ),
        migrations.AddField(
            model_name='review',
            name='reviewer',
            field=models.ForeignKey(on_delete=models.SET(1), related_name='reviewer_owner', to='interview.Interviewer'),
        ),
        migrations.CreateModel(
            name='PracticeInterview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveSmallIntegerField(choices=[(101, 'Practice Pending'), (102, 'Practice Active'), (103, 'Practice Complete')])),
                ('interview_create_date', models.DateTimeField(auto_now_add=True)),
                ('interview_attempt_date', models.DateTimeField(blank=True, null=True)),
                ('answers', models.ManyToManyField(related_name='practice_answer', to='interview.Answer')),
                ('taken_interviews', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='practice_interviews', to='interview.Interview')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='practice_candidate', to='interview.Interviewee')),
            ],
        ),
        migrations.AddField(
            model_name='interviewee',
            name='interviews',
            field=models.ManyToManyField(through='interview.TakenInterview', to='interview.Interview'),
        ),
        migrations.AddField(
            model_name='interview',
            name='interview_owner',
            field=models.ForeignKey(on_delete=models.SET(1), related_name='interview_owner', to='interview.Interviewer'),
        ),
        migrations.AddField(
            model_name='answer',
            name='candidate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_answer', to='interview.Interviewee'),
        ),
    ]
